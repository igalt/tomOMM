(function () {
  'use strict';

  angular.module('users')
      .controller('AuthenticationController', AuthenticationController);

  AuthenticationController.$inject = ['$scope', '$state', '$http', '$location', '$window',
      'Authentication', 'PasswordValidator', 'SendMailService', 'CommonService'];

  function AuthenticationController($scope, $state, $http, $location, $window,
                                    Authentication, PasswordValidator, SendMailService, CommonService) {
    var sendMail = SendMailService.sendMail;
    var logger = CommonService.printToLogger;
    $scope.authentication = Authentication;
    $scope.popoverMsg = PasswordValidator.getPopoverMsg();

    // Get an eventual error defined in the URL query string:
    $scope.error = $location.search().err;

    //IGAL: using the $root because we are trying to affect the parent view (authentication.client.view.html)
    $scope.$root.pageName = 'Sign in';
    if ($location.path().indexOf('signup') > -1){
      $scope.$root.pageName = 'Sign up';
     /* if ($state.first.state.name.indexOf('applications') || $state.first.state.name.indexOf('applications'))
      {
        $scope.explainText = true;
      }*/
    }

    //console.log($scope.$root.pageName);
    // If user is signed in then redirect back home
    if ($scope.authentication.user) {
      $location.path('/');
    }

    $scope.signup = function (isValid) {
      $scope.error = null;

      if (!isValid) {
        $scope.$broadcast('show-errors-check-validity', 'userForm');
        return false;
      }

      $http.post('/api/auth/signup', $scope.credentials).success(function (response) {
        // If successful we assign the response to the global user model
        $scope.authentication.user = response;

        sendMailToUser();

        // And redirect to the first state or home page
        if ($state.first.state.name !== 'signup') {
          $state.go($state.first.state.name, $state.first.params);
        } else {
          // And redirect to the first state or home page
          $state.go('home');
        }
      }).error(function (response) {
        $scope.error = response.message;
      });
    };

    $scope.signin = function (isValid) {
      $scope.error = null;

      if (!isValid) {
        $scope.$broadcast('show-errors-check-validity', 'userForm');
        return false;
      }
      $http.post('/api/auth/signin', $scope.credentials).success(function (response) {
        // If successful we assign the response to the global user model
        $scope.authentication.user = response;
        $window.user = response;

        // Do not redirect to the signin page
        if ($state.first.state.name !== 'signin?err') {
          $state.go($state.first.state.name, $state.first.params);
        } else {
          // And redirect to the previous state or home page
          $state.go($state.previous.state.name || 'home', $state.previous.params);
        }
      }).error(function (response) {
        $scope.error = response.message;
      });
    };

    // OAuth provider request
    $scope.callOauthProvider = function (url) {
      if ($state.first && $state.first.href) {
        url += '?redirect_to=' + encodeURIComponent($state.first.href);
      }

      // Effectively call OAuth authentication route:
      $window.location.href = url;
    };

    function sendMailToUser() {
      // Prepare the mail details
      // you can send a full email template through 'html' property or
      // an email content that generated by the server
      var mailContent = {
        mailTo: Authentication.user.email,
        subject: 'Welcome to TomMMS',
        name: Authentication.user.displayName,
        content: 'Welcome to TomMMS! ' +
          'Thanks so much for joining us. ' +
          'You are on your way to super-productivity and beyond!'
      };
      // Send the mail
      sendMail(mailContent);
    }
  }
})();
